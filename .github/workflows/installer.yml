name: Publish installer
on:
  push:
    tags:
      - "*"
  schedule:
    - cron: "0 0 * * *"
jobs:
  installer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v6

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: browser-actions/setup-chrome@v1

      - run: chrome --version

      - name: Install dependencies
        run: |
          cd ./werft-scraper
          npm ci

      - name: Werft
        id: werft
        run: |
          export PUPPETEER_EXECUTABLE_PATH=$(which chromium)
          node ./werft-scraper

          # Get the tag name
          cat ./output.json
          INSTALLER_VERSION=$(cat ./output.json | jq -r '.tags[0]')

          echo "installer_version=${INSTALLER_VERSION}" >> $GITHUB_OUTPUT

          if [ "${{ steps.branch-name.outputs.is_tag }}" = "true"  ]; then
            # Release - image tags are "latest" and tag name

            echo "tags=ghcr.io/${{ github.repository }}/installer:latest,ghcr.io/${{ github.repository }}/installer:${{ steps.branch-name.outputs.tag }}" >> $GITHUB_OUTPUT
          else
            # Nightly - image tags are "nightly" and date
            dateTag="$(date --rfc-3339=date)"

            echo "tags=ghcr.io/${{ github.repository }}/installer:nightly,ghcr.io/${{ github.repository }}/installer:${dateTag}" >> $GITHUB_OUTPUT
          fi

      - name: Build Installer image
        uses: docker/build-push-action@v4
        with:
          build-args: |
            INSTALLER_VERSION=${{ steps.werft.outputs.installer_version }}
          context: ./components/installer
          platforms: linux/amd64
          push: true
          tags: ${{ steps.werft.outputs.tags }}
